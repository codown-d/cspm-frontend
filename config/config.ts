import zh_CN from 'antd/lib/locale/zh_CN';
import proxy from './proxy';
import routes, { PermisionMap } from './routes';
import { SITE_TITLE } from './subject';

const {
  REACT_APP_ENV = 'dev',
  PUBLIC_URL = '',
  SOCKET_URL,
  REACT_APP_SUBJECT = 'tensor',
} = process.env;

console.log(REACT_APP_SUBJECT);

const links = [
  {
    href: `${PUBLIC_URL}/font/iconfont.css`,
    rel: 'stylesheet',
    type: 'text/css',
  },
  {
    href: `${PUBLIC_URL}/theme.css`,
    rel: 'stylesheet',
    type: 'text/css',
  },
];

export default {
  title: SITE_TITLE[REACT_APP_SUBJECT],
  hash: true,
  fastRefresh: true,
  esbuildMinifyIIFE: true,
  define: {
    'process.env': {
      PUBLIC_URL,
      SOCKET_URL,
      REACT_APP_SUBJECT: REACT_APP_SUBJECT || 'tensor',
    },
    LoginLogo: `${PUBLIC_URL}/images/login_logo.png`,
    LoginLogoEn: `${PUBLIC_URL}/images/login_logo_en.png`,
    PermisionMap,
  },
  // headScripts: [
  //   'https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.1/socket.io.js',
  //   // 'http://polyfill.alicdn.com/v3/polyfill.min.js', // or https://polyfill.io/v3/polyfill.min.js
  // ],
  links,
  locale: {
    enable: true,
    locale: 'zh-CN',
    baseNavigator: true,
  },
  proxy: proxy[REACT_APP_ENV as keyof typeof proxy],
  antd: {
    appConfig: {
      locale: zh_CN,
      components: {
        Table: {
          controlItemBgHover: 'transparent',
        },
      },
    },
    // styleProvider: {
    //   hashPriority: 'high',
    //   transformers: [legacyLogicalPropertiesTransformer],
    // },
    theme: {
      autoInsertSpaceInButton: false,
      token: {
        fontSize: 12,
        colorPrimary: '#2177d1',
        colorInfo: '#2177d1',
        colorPrimaryActive: '#1a68ba',
        // colorPrimaryTextHover: '#2d94ff',
        fontFamily: 'PingFang SC-Regular, PingFang SC',
        colorPrimaryTextActive: '#1a68ba',
        // colorPrimaryHover: '#2d94ff',
        colorWarning: '#ff8a34',
        colorError: '#e95454',
        colorLink: '#2177d1',
        colorTextBase: '#1e222a',
        wireframe: false,
        boxShadow: '0px 1px 12px 0px rgba(144,168,205,0.25)',
        boxShadowSecondary: '0 2px 20px rgba(144,168,205,.25)',
        borderRadius: 4,
        borderRadiusXS: 4,
        borderRadiusLG: 16,
        sizeStep: 4,
        controlHeight: 28,
        controlHeightSM: 22,
        padding: 20,
        paddingSM: 12,
        paddingMD: 24,
        colorText: '#3e4653',
        colorTextSecondary: '#6c7480',
        colorTextQuaternary: '#b3bac6',
        colorTextTertiary: '#8e97a3',
        colorBorder: '#E7E9ED',
        controlInteractiveSize: 14,
        borderRadiusSM: 4,
        paddingXS: 6,
      },
      components: {
        Button: {
          // contentLineHeight: 1.5,
          paddingBlock: 4,
          paddingInline: 14,
          borderRadius: 4,
          borderRadiusSM: 4,
          paddingBlockSM: 0,
          paddingInlineSM: 8,
          marginXS: 4,
          // contentLineHeightSM: 1.3,
          colorPrimaryActive: '#2177d1',
          colorPrimaryBorder: '#2177d1',
          colorPrimaryTextHover: '#2d94ff',
          defaultHoverColor: '#2177d1',
          colorPrimaryHover: '#2177d1',
          defaultActiveColor: '#2177d1',
          defaultHoverBorderColor: '2177d1',
          defaultHoverBg: 'rgba(33, 119, 209, 0.05)',
          colorError: '#e95454',
          colorErrorBorderHover: '#e95454',
          colorErrorHover: '#e95454',
          textHoverBg: 'rgba(33, 119, 209, 0.05)',
          colorText: '#2177d1',
          defaultActiveBorderColor: '#2177d1',
          defaultBorderColor: '#e7e9ed',
          colorBorder: '#e7e9ed',
          borderColorDisabled: '#e7e9ed',
        },
        Typography: {
          colorText: '#3e4653',
        },
        Select: {
          colorText: '#6C7480',
          colorPrimaryHover: '#2177d1',
          borderRadiusLG: 8,
          borderRadiusSM: 6,
          controlHeightSM: 26,
          controlPaddingHorizontalSM: 12,
          multipleItemHeight: 22,
          // controlPaddingHorizontal: -2,
          paddingXXS: 3,
          multipleItemBg: 'rgba(33, 119, 209, 0.05)',
          // multipleItemBorderColor: 'rgba(33, 119, 209, 0.05)',
        },
        Pagination: {
          colorText: '#8E97A3',
          // colorText: '#6C7480',
          colorBorder: '#E7E9ED',
          itemSizeSM: 26,
          controlHeightSM: 26,
          borderRadiusSM: 6,
          marginSM: 12,
          fontWeightStrong: 400,
        },
        Radio: {
          dotSize: 7,
          paddingXS: 6,
          wrapperMarginInlineEnd: 32,
        },
        Checkbox: {
          controlInteractiveSize: 14,
          borderRadiusSM: 3,
          paddingXS: 6,
          colorPrimary: '#2177d1',
        },
        Card: {
          paddingLG: 16,
        },
        DatePicker: {
          borderRadiusLG: 8,
          activeBorderColor: '#2177d1',
          hoverBorderColor: '#2177d1',
          colorBorder: '#e7e9ed',
        },
        Input: {
          hoverBorderColor: '#2177d1',
          activeShadow: 'none',
          errorActiveShadow: 'none',
          colorText: '#3E4653',
          paddingInline: 10,
          paddingBlock: 4,
        },
        InputNumber: {
          hoverBorderColor: '#2177d1',
          activeShadow: 'none',
          errorActiveShadow: 'none',
          paddingInline: 10,
        },
        Form: {
          labelColor: '#6c7480',
          labelRequiredMarkColor: 'rgb(233, 84, 84)',
          colorError: 'rgb(233, 84, 84)',
          colorText: '#3e4653',
          colorTextDescription: '#6c7480',
          itemMarginBottom: 16,
          labelFontSize: 12,
          labelHeight: 20,
          controlHeight: 20,
          controlHeightSM: 20,
        },
        Table: {
          colorText: '#3e4653',
          borderColor: '#f4f6fa',
          cellPaddingBlockMD: '6px 0',
          cellPaddingInlineMD: '6px 16px',
          lineHeight: 1.6666666666666667,
          headerColor: '#B3BAC6',
          headerBg: '#ffffff',
          footerBg: '#ffffff',
          colorSplit: '#f4f6fa',
          fontWeightStrong: 400,
          headerSortActiveBg: 'transparent',
          headerSortHoverBg: 'transparent',
          bodySortBg: 'transparent',
          fixedHeaderSortActiveBg: 'transparent',
        },
        Modal: {
          titleLineHeight: 1.625,
          titleFontSize: 16,
          titleColor: '#1E222A',
        },
        Drawer: {
          fontSizeLG: 20,
        },
        Dropdown: {
          borderRadiusLG: 8,
          borderRadiusSM: 0,
        },
        Switch: {
          fontSizeSM: 12,
          handleSize: 18,
          trackHeight: 24,
          trackMinWidth: 48,
          trackPadding: 2,
          trackPaddingSM: 2,
          innerMinMargin: 10,
          innerMaxMargin: 25,
          handleSizeSM: 14,
          trackHeightSM: 18,
          trackMinWidthSM: 32,
          colorTextQuaternary: '#b3bac6',
        },
        Segmented: {
          controlPaddingHorizontal: 9,
          controlHeight: 28,
          itemHoverBg: 'transparent',
          itemHoverColor: '#6c7480',
          itemSelectedColor: '#2177d1',
          itemColor: '#6c7480',
          itemActiveBg: '#ffffff',
        },
        Tabs: {
          itemActiveColor: '#2177d1',
          inkBarColor: '#2177d1',
          itemHoverColor: '#2177d1',
          itemSelectedColor: '#2177d1',
          colorBorder: '#e7e9ed',
          itemColor: '#6c7480',
          colorText: '#3e4653',
          horizontalItemPadding: '3px 0',
          horizontalItemGutter: 20,
          boxShadowSecondary: '0px 6px 9px 0px rgba(144, 168, 205, 0.1)',
        },
        Tooltip: {
          colorBgSpotlight: '#3E4653',
          paddingXS: 12,
          sizePopupArrow: 16,
        },
        Tree: {
          nodeHoverBg: 'rgba(33,119,209,0.05)',
          nodeSelectedBg: 'rgba(33,119,209,0.05)',
          paddingXS: 16,
        },
        Popover: {
          borderRadiusLG: 8,
        },
      },
    },
    configProvider: {},
  },
  history: { type: 'hash' },
  access: {
    // strictMode: true,
  },
  model: {},
  valtio: {},
  initialState: {},
  request: {},
  routes,
  npmClient: 'pnpm',
  publicPath: process.env.NODE_ENV === 'production' ? './' : '/',
  // manifest: {
  //   basePath: '/proxy/abc',
  // },
  plugins: [require.resolve('./cusPlugins.ts')],
  favicons: [`${PUBLIC_URL}/images/favicon.ico`],
  tailwindcss: {},
  mfsu: {
    exclude: ['@tz/components'],
  },
};
