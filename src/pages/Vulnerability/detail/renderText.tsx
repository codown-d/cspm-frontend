import { ZH_LANG } from '@/locales';
import translate from '@/locales/translate';
import { toDetailIntercept } from '@/utils';
import { DATE_TIME } from '@/utils/constants';
import { Link, getLocale, history } from '@umijs/max';
import { message } from 'antd';
import dayjs from 'dayjs';

export interface IInfo extends API.VulnerabilityInfo {}

const linkTo = (target: 'asset' | 'leak' | 'risks' | 'sensitive', id: any) => {
  if (target === 'asset') {
    return `/asset/info/${id}`;
  }
  if (target === 'risks') {
    return `/risks/info/${id}`;
  }
  if (target === 'leak') {
    return `/risks/vuln-info/${id}`;
  }
  if (target === 'sensitive') {
    return `/risks/sensitive-info/${id}`;
  }
  return '';
};

const onClickAsset = async (
  e: any,
  hostExitMap: Record<string, boolean>,
  hashId: string,
  isRisk?: boolean,
) => {
  e.stopPropagation();
  e.preventDefault();
  if (isRisk) {
    toDetailIntercept({ type: 'policy', id: hashId }, () => {
      history.push(linkTo('risks', hashId));
    });
    return;
  }
  if (hostExitMap[hashId]) {
    history.push(linkTo('asset', hashId));
  } else {
    message.error(translate('unStand.hostHasDel'));
  }
};

export const renderAnaly = (info: IInfo) => {
  const chainData = info?.chain_data;
  const hostExitMap = info?.assets_exist_map || {};
  const isZh = getLocale() === ZH_LANG;
  if (!chainData) {
    return undefined;
  }
  const { hosts, config, vpc, vuln, sensitive } = chainData;
  if (isZh) {
    return [
      <p>
        <span className={'bold2'}>EC2&nbsp;</span>
        <Link
          to={linkTo('asset', hosts[0].hash_id)}
          onClick={(e) => onClickAsset(e, hostExitMap, hosts[0].hash_id)}
        >
          {hosts[0].name}({hosts[0].instance_id || '-'})
        </Link>
        <span>&nbsp;的&nbsp;</span>
        <Link
          to={linkTo('risks', config.hash_id)}
          onClick={(e) => onClickAsset(e, hostExitMap, config.hash_id, true)}
        >
          {config.risk_name}
        </Link>
      </p>,
      <p>
        <span className={'bold2'}>EC2&nbsp;</span>
        <Link
          to={linkTo('asset', hosts[0].hash_id)}
          onClick={(e) => onClickAsset(e, hostExitMap, hosts[0].hash_id)}
        >
          {hosts[0].name}({hosts[0].instance_id || '-'})
        </Link>
        <span>
          &nbsp;存在<span className={'bold2'}>漏洞</span>&nbsp;
        </span>
        <Link to={linkTo('leak', vuln[0].hash_id)}>
          {vuln[0].risk_name || '-'}
        </Link>
        <span>，可利用网络对云主机进行攻击</span>
      </p>,
      <p>
        <span className={'bold2'}>EC2&nbsp;</span>
        <Link
          to={linkTo('asset', hosts[1].hash_id)}
          onClick={(e) => onClickAsset(e, hostExitMap, hosts[1].hash_id)}
        >
          {hosts[1].name}({hosts[1].instance_id || '-'})
        </Link>
        <span>
          &nbsp;存在<span className={'bold2'}>漏洞</span>&nbsp;
        </span>
        <Link to={linkTo('leak', vuln[1].hash_id)}>
          {vuln[1].risk_name || '-'}
        </Link>
        <span>，可利用网络对云主机进行攻击</span>
      </p>,
      <p>
        <span className={'bold2'}>EC2&nbsp;</span>
        <Link
          to={linkTo('asset', hosts[0].hash_id)}
          onClick={(e) => onClickAsset(e, hostExitMap, hosts[0].hash_id)}
        >
          {hosts[0].name}({hosts[0].instance_id || '-'})
        </Link>
        <span className={'bold2'}>&nbsp;与 EC2&nbsp;</span>
        <Link
          to={linkTo('asset', hosts[1].hash_id)}
          onClick={(e) => onClickAsset(e, hostExitMap, hosts[1].hash_id)}
        >
          {hosts[1].name}({hosts[1].instance_id || '-'})
        </Link>
        <span>&nbsp;位于同一私有网络&nbsp;VPC&nbsp;</span>
        <Link
          to={linkTo('asset', vpc.hash_id)}
          onClick={(e) => onClickAsset(e, hostExitMap, vpc.hash_id)}
        >
          {vpc.name}
        </Link>
        <span>&nbsp;下，网络大概率互通</span>
      </p>,
      <p>
        <span className={'bold2'}>EC2&nbsp;</span>
        <Link
          to={linkTo('asset', hosts[1].hash_id)}
          onClick={(e) => onClickAsset(e, hostExitMap, hosts[1].hash_id)}
        >
          {hosts[1].name}({hosts[1].instance_id || '-'})
        </Link>
        <span>&nbsp;存在</span>
        <span className={'bold2'}>凭证密钥&nbsp;</span>
        <Link to={linkTo('sensitive', sensitive.hash_id)}>
          {sensitive.risk_name}
        </Link>
        <span>，可能有权限访问</span>
        <span className={'bold2'}>&nbsp;S3</span>
        {/*
        <span>
          &nbsp;{s3.name}({s3.hash_id})
        </span>
        */}
      </p>,
    ];
  }
  return [
    <p>
      <span className={'bold2'}>EC2&nbsp;</span>
      <Link
        to={linkTo('asset', hosts[0].hash_id)}
        onClick={(e) => onClickAsset(e, hostExitMap, hosts[0].hash_id)}
      >
        {hosts[0].name}({hosts[0].instance_id || '-'})
      </Link>
      <Link
        to={linkTo('risks', config.hash_id)}
        onClick={(e) => onClickAsset(e, hostExitMap, config.hash_id, true)}
      >
        &nbsp;{config.risk_name}
      </Link>
    </p>,
    <p>
      <span className={'bold2'}>EC2&nbsp;</span>
      <Link
        to={linkTo('asset', hosts[0].hash_id)}
        onClick={(e) => onClickAsset(e, hostExitMap, hosts[0].hash_id)}
      >
        {hosts[0].name}({hosts[0].instance_id || '-'})
      </Link>
      <span>
        &nbsp;<span className={'bold2'}>Vulnerable</span>&nbsp;
      </span>
      <Link to={linkTo('leak', vuln[0].hash_id)}>
        {vuln[0].risk_name || '-'}
      </Link>
      <span>,&nbsp;Networks can be used to attack cloud hosts</span>
    </p>,
    <p>
      <span className={'bold2'}>EC2&nbsp;</span>
      <Link
        to={linkTo('asset', hosts[1].hash_id)}
        onClick={(e) => onClickAsset(e, hostExitMap, hosts[1].hash_id)}
      >
        {hosts[1].name}({hosts[1].instance_id || '-'})
      </Link>
      <span>
        &nbsp;<span className={'bold2'}>Vulnerable</span>&nbsp;
      </span>
      <Link to={linkTo('leak', vuln[1].hash_id)}>
        {vuln[1].risk_name || '-'}
      </Link>
      <span>,&nbsp;Networks can be used to attack cloud hosts</span>
    </p>,
    <p>
      <span className={'bold2'}>EC2&nbsp;</span>
      <Link
        to={linkTo('asset', hosts[0].hash_id)}
        onClick={(e) => onClickAsset(e, hostExitMap, hosts[0].hash_id)}
      >
        {hosts[0].name}({hosts[0].instance_id || '-'})
      </Link>
      <span className={'bold2'}>&nbsp;and EC2&nbsp;</span>
      <Link
        to={linkTo('asset', hosts[1].hash_id)}
        onClick={(e) => onClickAsset(e, hostExitMap, hosts[1].hash_id)}
      >
        {hosts[1].name}({hosts[1].instance_id || '-'})
      </Link>
      <span>&nbsp;are on the same private network&nbsp;VPC&nbsp;</span>
      <Link
        to={linkTo('asset', vpc.hash_id)}
        onClick={(e) => onClickAsset(e, hostExitMap, vpc.hash_id)}
      >
        {vpc.name}
      </Link>
      <span>&nbsp;, with a high probability of network interoperability</span>
    </p>,
    <p>
      <span className={'bold2'}>EC2&nbsp;</span>
      <Link
        to={linkTo('asset', hosts[1].hash_id)}
        onClick={(e) => onClickAsset(e, hostExitMap, hosts[1].hash_id)}
      >
        {hosts[1].name}({hosts[1].instance_id || '-'})
      </Link>
      <span>&nbsp;has&nbsp;</span>
      <span className={'bold2'}>sensitive information&nbsp;</span>
      <Link to={linkTo('sensitive', sensitive.hash_id)}>
        {sensitive.risk_name}
      </Link>
      <span>, and may have access to the&nbsp;</span>
      <span className={'bold2'}>&nbsp;S3</span>
    </p>,
  ];
};

export const renderChangeLog = (info: IInfo) => {
  const isZh = getLocale() === ZH_LANG;
  const changeLogs = info?.change_logs;
  const chainData = info?.chain_data;
  const hostExitMap = info?.assets_exist_map || {};
  if (!changeLogs) {
    return undefined;
  }

  let spans: any = changeLogs.map((item, idx) => {
    const _data = item.data || {};
    if (item.type.includes('Config')) {
      return (
        <>
          {item.type.includes('remove') && <span>修复了&nbsp;</span>}
          <span className={'bold2'}>EC2&nbsp;</span>
          <Link
            to={linkTo('asset', _data.Host.hash_id)}
            onClick={(e) => onClickAsset(e, hostExitMap, _data.Host.hash_id)}
          >
            {_data.Host.name || '-'}({_data.Host.instance_id || '-'})
          </Link>
          <span>&nbsp;的&nbsp;</span>
          <Link
            to={linkTo('risks', _data.config_hash_id)}
            onClick={(e) =>
              onClickAsset(e, hostExitMap, _data.config_hash_id!, true)
            }
          >
            {_data.config_name || '-'}
          </Link>
          {item.type.includes('remove') && <span>&nbsp;问题</span>}
        </>
      );
    }
    if (item.type.includes('Vuln')) {
      return (
        <>
          {item.type.includes('remove') && <span>修复了&nbsp;</span>}
          <span className={'bold2'}>EC2&nbsp;</span>
          <Link
            to={linkTo('asset', _data.Host.hash_id)}
            onClick={(e) => onClickAsset(e, hostExitMap, _data.Host.hash_id)}
          >
            {_data.Host.name}({_data.Host.instance_id || '-'})
          </Link>
          <span>
            &nbsp;{item.type.includes('add') ? '存在漏洞' : '的'}&nbsp;
          </span>
          <Link to={linkTo('leak', _data.vuln_hash_id)}>
            {_data.vuln_cve_code || '-'}
          </Link>
          {item.type.includes('remove') && <span>&nbsp;漏洞</span>}
        </>
      );
    }
    if (item.type.includes('Sensitive')) {
      return (
        <>
          {item.type.includes('remove') && <span>删除了&nbsp;</span>}
          <span className={'bold2'}>EC2&nbsp;</span>
          <Link
            to={linkTo('asset', _data.Host.hash_id)}
            onClick={(e) => onClickAsset(e, hostExitMap, _data.Host.hash_id)}
          >
            {_data.Host.name}({_data.Host.instance_id || '-'})
          </Link>
          <span>
            &nbsp;{item.type.includes('add') ? '存在凭证密钥' : '的'}&nbsp;
          </span>
          <Link to={linkTo('sensitive', _data.sensitive_hash_id)}>
            {_data.sensitive_rule_name || '-'}
          </Link>
        </>
      );
    }
    if (item.type.includes('VPC')) {
      return (
        <>
          <span className={'bold2'}>EC2&nbsp;</span>
          <Link
            to={linkTo('asset', chainData?.hosts[0].hash_id)}
            onClick={(e) =>
              onClickAsset(e, hostExitMap, chainData?.hosts[0].hash_id)
            }
          >
            {chainData?.hosts[0].name}({chainData?.hosts[0].hash_id})
          </Link>
          <span>&nbsp;与&nbsp;</span>
          <span className={'bold2'}>&nbsp;EC2&nbsp;</span>
          <Link
            to={linkTo('asset', chainData?.hosts[1].hash_id)}
            onClick={(e) =>
              onClickAsset(e, hostExitMap, chainData?.hosts[1].hash_id)
            }
          >
            {chainData?.hosts[1].name}({chainData?.hosts[1].hash_id})
          </Link>
          <span>
            {item.type.includes('add')
              ? '位于同一私有网络 VPC'
              : '不在同一私有网络 VPC '}
          </span>
          <Link
            to={linkTo('asset', _data.vpc_hash_id)}
            onClick={(e) => onClickAsset(e, hostExitMap, _data.vpc_hash_id)}
          >
            {_data.vpc_name || '-'}({_data.vpc_hash_id})
          </Link>
          <span>下</span>
        </>
      );
    }
  });

  if (!isZh) {
    spans = changeLogs.map((item, idx) => {
      const _data = item.data || {};
      if (item.type.includes('Config')) {
        if (item.type.includes('remove')) {
          return (
            <>
              <span>Fixed&nbsp;</span>
              <Link
                to={linkTo('risks', _data.config_hash_id)}
                onClick={(e) =>
                  onClickAsset(e, hostExitMap, _data.config_hash_id!, true)
                }
              >
                {_data.config_name || '-'}
              </Link>
              <span>&nbsp;issue with&nbsp;</span>
              <span className={'bold2'}>EC2&nbsp;</span>
              <Link
                to={linkTo('asset', _data.Host.hash_id)}
                onClick={(e) =>
                  onClickAsset(e, hostExitMap, _data.Host.hash_id)
                }
              >
                {_data.Host.name || '-'}({_data.Host.instance_id || '-'})
              </Link>
            </>
          );
        }
        return (
          <>
            <Link
              to={linkTo('risks', _data.config_hash_id)}
              onClick={(e) =>
                onClickAsset(e, hostExitMap, _data.config_hash_id!, true)
              }
            >
              {_data.config_name || '-'}
            </Link>
            <span>in&nbsp;</span>
            <span className={'bold2'}>EC2&nbsp;</span>
            <Link
              to={linkTo('asset', _data.Host.hash_id)}
              onClick={(e) => onClickAsset(e, hostExitMap, _data.Host.hash_id)}
            >
              {_data.Host.name || '-'}({_data.Host.instance_id || '-'})
            </Link>
          </>
        );
      }
      if (item.type.includes('Vuln')) {
        if (item.type.includes('remove')) {
          return (
            <>
              <span>Fixed&nbsp;</span>
              <Link to={linkTo('leak', _data.vuln_hash_id)}>
                {_data.vuln_cve_code || '-'}
              </Link>
              <span>vulnerability&nbsp;</span>
              <span>in&nbsp;</span>
              <span className={'bold2'}>EC2&nbsp;</span>
              <Link
                to={linkTo('asset', _data.Host.hash_id)}
                onClick={(e) =>
                  onClickAsset(e, hostExitMap, _data.Host.hash_id)
                }
              >
                {_data.Host.name}({_data.Host.instance_id || '-'})
              </Link>
            </>
          );
        }
        return (
          <>
            <span>Vulnerability</span>
            <Link to={linkTo('leak', _data.vuln_hash_id)}>
              {_data.vuln_cve_code || '-'}
            </Link>
            <span>&nbsp;in&nbsp;</span>
            <span className={'bold2'}>EC2&nbsp;</span>
            <Link
              to={linkTo('asset', _data.Host.hash_id)}
              onClick={(e) => onClickAsset(e, hostExitMap, _data.Host.hash_id)}
            >
              {_data.Host.name}({_data.Host.instance_id || '-'})
            </Link>
          </>
        );
      }
      if (item.type.includes('Sensitive')) {
        if (item.type.includes('remove')) {
          return (
            <>
              <span>Deleted&nbsp;</span>
              <Link to={linkTo('sensitive', _data.sensitive_hash_id)}>
                {_data.sensitive_rule_name || '-'}
              </Link>
              <span>sensitive information&nbsp;</span>
              <span>in&nbsp;</span>
              <span className={'bold2'}>EC2&nbsp;</span>
              <Link
                to={linkTo('asset', _data.Host.hash_id)}
                onClick={(e) =>
                  onClickAsset(e, hostExitMap, _data.Host.hash_id)
                }
              >
                {_data.Host.name}({_data.Host.instance_id || '-'})
              </Link>
            </>
          );
        }
        return (
          <>
            <span>Sensitive information</span>
            <Link to={linkTo('sensitive', _data.sensitive_hash_id)}>
              {_data.sensitive_rule_name || '-'}
            </Link>
            <span>&nbsp;in&nbsp;</span>
            <span className={'bold2'}>EC2&nbsp;</span>
            <Link
              to={linkTo('asset', _data.Host.hash_id)}
              onClick={(e) => onClickAsset(e, hostExitMap, _data.Host.hash_id)}
            >
              {_data.Host.name}({_data.Host.instance_id || '-'})
            </Link>
          </>
        );
      }
      if (item.type.includes('VPC')) {
        return (
          <>
            <span className={'bold2'}>EC2&nbsp;</span>
            <Link
              to={linkTo('asset', chainData?.hosts[0].hash_id)}
              onClick={(e) =>
                onClickAsset(e, hostExitMap, chainData?.hosts[0].hash_id)
              }
            >
              {chainData?.hosts[0].name}({chainData?.hosts[0].hash_id})
            </Link>
            <span>&nbsp;and&nbsp;</span>
            <span className={'bold2'}>&nbsp;EC2&nbsp;</span>
            <Link
              to={linkTo('asset', chainData?.hosts[1].hash_id)}
              onClick={(e) =>
                onClickAsset(e, hostExitMap, chainData?.hosts[1].hash_id)
              }
            >
              {chainData?.hosts[1].name}({chainData?.hosts[1].hash_id})
            </Link>
            <span>
              &nbsp;
              {item.type.includes('add')
                ? 'are on the same private network VPC'
                : 'are not located on the same private network VPC'}
              &nbsp;
            </span>
            <Link
              to={linkTo('asset', _data.vpc_hash_id)}
              onClick={(e) => onClickAsset(e, hostExitMap, _data.vpc_hash_id)}
            >
              {_data.vpc_name || '-'}({_data.vpc_hash_id})
            </Link>
          </>
        );
      }
    });
  }
  return changeLogs.map((item, idx) => (
    <p key={idx}>
      <span style={{ display: 'inline-block', marginRight: '16px' }}>
        {dayjs(item.created_at).format(DATE_TIME)}
      </span>
      {spans[idx]}
    </p>
  ));
};
